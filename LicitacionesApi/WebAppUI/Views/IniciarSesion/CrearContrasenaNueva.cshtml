@{
    ViewBag.Title = "CrearContrasenaNueva";
    Layout = "~/Views/Shared/_LayoutNoMenu.cshtml";
}

@using (Html.BeginForm("CrearContrasenaNuevaForm", "IniciarSesion", FormMethod.Post, new { id = "crearContrasenaForm" }))
{
    <h2>Iniciar sesion</h2>

    <div>
        @Html.ValidationSummary(true)
    </div>

    <table>
        <tr>
            <td>@Html.Label("contrasena", "Contraseña nueva:")</td>
            <td>
                @Html.Password("contrasena", null, new { id = "contrasenaInput" })
                @Html.ValidationMessage("contrasena", "El campo contraseña es requerido.")
            </td>
        </tr>
        <tr>
            <td>@Html.Label("contrasenaTwice", "Repetir contraseña:")</td>
            <td>
                @Html.Password("contrasenaTwice", null, new { id = "contrasenaTwiceInput" })
                @Html.ValidationMessage("contrasenaTwice", "El campo repetir contraseña es requerido.")
                <div id="contrasenaMismatchError" style="display:none; color:red;">Las contraseñas no coinciden.</div>
                <div id="contrasenaFormatError" style="display:none; color:red">La contraseña tienen no tiene el formato correcto<br />- Minimo inclur 1 número, 1 carácter especial, 1 mayuscula <br />- Minimo 8 cáracteres</div>
            </td>
        </tr>
        <tr>
            <td>
                <button id="btnLogin" type="submit" class="btn btn-success" disabled>Cambiar contraseña</button>
                @Html.ActionLink("Cancel", "GoBack", "IniciarSesion", new { @class = "btn btn-success" })
            </td>
        </tr>
    </table>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#contrasenaTwiceInput').on('input', function() {
                var contrasena = $('#contrasenaInput').val();
                var contrasenaTwice = $(this).val();
                var contrasenaMismatchError = $('#contrasenaMismatchError');
                var submitButton = $('#btnLogin');

                if (contrasena !== '' && contrasena !== contrasenaTwice) {
                    contrasenaMismatchError.show();
                    submitButton.prop('disabled', true);
                } else {
                    contrasenaMismatchError.hide();
                    submitButton.prop('disabled', false);
                }
            });

            $('#contrasenaInput').on('input', function () {
                var contrasena = $(this).val();
                var contrasenaTwice = $('#contrasenaTwiceInput').val();
                var contrasenaMismatchError = $('#contrasenaMismatchError');
                var submitButton = $('#btnLogin');

                if (contrasenaTwice !== '' || contrasena !== contrasenaTwice) {
                    contrasenaMismatchError.show();
                    submitButton.prop('disabled', true);
                } else {
                    contrasenaMismatchError.hide();
                    submitButton.prop('disabled', false);
                }
            });

            $("#btnLogin").on("click", function () {
                var contrasena = $('#contrasenaInput').val();

                contrasenaFormatError = $('#contrasenaFormatError');
                submitButton = $('#btnLogin');

                if (contrasena == '' || !contrasena.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,21}$/)) {
                    event.preventDefault();
                    contrasenaFormatError.show();

                    
                } else {
                    contrasenaFormatError.hide();
                }
            });
        });
    </script>
}